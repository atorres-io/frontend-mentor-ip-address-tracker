{"version":3,"sources":["components/Header/Header.js","utils/SchemeService.js","components/Main/Main.js","utils/HttpService.js","pages/Home/Home.js","App.js","utils/reportWebVitals.js","index.js"],"names":["Header","useEffect","preferDarkScheme","window","matchMedia","matches","Main","props","data","useState","url","setUrl","console","log","MapContainer","center","zoom","zoomControl","TileLayer","_makeRequest","a","method","type","body","fetch","headers","Accept","credentials","JSON","stringify","response","text","json","getGeo","Home","geo","setGeo","getGeoDatas","useCallback","ipv4","geolocation","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yVAWeA,MARf,WAKC,OAJAC,qBAAU,eAIH,4B,8BCFKC,EACZC,OAAOC,YACPD,OAAOC,WAAW,gCAAgCC,QC4BpCC,MAtBf,SAAcC,GACb,IAAMC,EAAOD,EAAMC,KACnB,EAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAOA,OALAV,qBAAU,WACTU,EAAOT,EDlBR,4EAGA,iECgBCU,QAAQC,IAAIL,KACV,CAACA,IAGH,+BACC,cAACM,EAAA,EAAD,CACCC,OAAQ,CAAC,WAAY,UACrBC,KAAM,GACNC,aAAa,EAHd,SAKC,cAACC,EAAA,EAAD,CAAWR,IAAKA,SC9BdS,EAAY,uCAAG,WAAOT,EAAP,wBAAAU,EAAA,6DAAcC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,KAAMC,EAA5B,EAA4BA,KAA5B,SACGC,MAAMd,EAAK,CACjCW,OAAQA,EACRI,QAAS,CACRC,OAAQ,mBACR,eAAgB,oBAEjBC,YAAa,cACbJ,KAAMK,KAAKC,UAAUN,KARF,UACdO,EADc,OAUJ,SAATR,EAVa,iCAUWQ,EAASC,OAVpB,4DAUmCD,EAASE,OAV5C,uGAAH,wDAqBLC,EAAS,SAAAvB,GAKrB,OAAOS,EAAaT,EAJJ,CACfW,OAAQ,MACRC,KAAM,UCSOY,MAvBf,WACC,MAAsBzB,mBAAS,IAA/B,mBAAO0B,EAAP,KAAYC,EAAZ,KAEMC,EAAcC,sBAAW,sBAAC,8BAAAlB,EAAA,sEDKzBD,ECJmB,wBDAV,CACfE,OAAQ,MACRC,KAAM,SCHyB,cACzBiB,EADyB,gBAELN,EAAO,kFAAD,OACmDM,IAHpD,OAEzBC,EAFyB,OAK/BJ,EAAOI,GALwB,2CAM7B,IAMH,OAJAvC,qBAAU,WACToC,MACE,CAACA,IAGH,qCACC,cAAC,EAAD,IACA,cAAC,EAAD,CAAM7B,KAAM2B,QCnBAM,MAJf,WACC,OAAO,cAAC,EAAD,KCMOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAGzBb,M","file":"static/js/main.5a15d1b8.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport './Header.css';\n\nfunction Header() {\n\tuseEffect(() => {});\n\n\tconst something = () => {};\n\n\treturn <header></header>;\n}\n\nexport default Header;\n","export const DARK_MAP =\n\t'https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png';\n\nexport const LIGHT_MAP =\n\t'https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png';\n\nexport const preferDarkScheme =\n\twindow.matchMedia &&\n\twindow.matchMedia('(prefers-color-scheme: dark)').matches;\n","import React, { useEffect, useState } from 'react';\nimport './Main.css';\n\n//* External Packages\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer } from 'react-leaflet';\n\n//* Utils\nimport {\n\tpreferDarkScheme,\n\tDARK_MAP,\n\tLIGHT_MAP,\n} from '../../utils/SchemeService';\n\nfunction Main(props) {\n\tconst data = props.data;\n\tconst [url, setUrl] = useState('');\n\n\tuseEffect(() => {\n\t\tsetUrl(preferDarkScheme ? DARK_MAP : LIGHT_MAP);\n\t\tconsole.log(data);\n\t}, [data]);\n\n\treturn (\n\t\t<main>\n\t\t\t<MapContainer\n\t\t\t\tcenter={[36.719865, -4.462333]}\n\t\t\t\tzoom={15}\n\t\t\t\tzoomControl={false}\n\t\t\t>\n\t\t\t\t<TileLayer url={url} />\n\t\t\t</MapContainer>\n\t\t</main>\n\t);\n}\n\nexport default Main;\n","const _makeRequest = async (url, { method, type, body }) => {\n\tconst response = await fetch(url, {\n\t\tmethod: method,\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tcredentials: 'same-origin',\n\t\tbody: JSON.stringify(body),\n\t});\n\treturn type === 'text' ? await response.text() : await response.json();\n};\n\nexport const getIP = url => {\n\tconst options = {\n\t\tmethod: 'GET',\n\t\ttype: 'text',\n\t};\n\treturn _makeRequest(url, options);\n};\n\nexport const getGeo = url => {\n\tconst options = {\n\t\tmethod: 'GET',\n\t\ttype: 'text',\n\t};\n\treturn _makeRequest(url, options);\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport './Home.css';\n\n//* Components\nimport Header from '../../components/Header/Header';\nimport Main from '../../components/Main/Main';\n\n//* Utils\nimport { getIP, getGeo } from '../../utils/HttpService';\n\nfunction Home() {\n\tconst [geo, setGeo] = useState({});\n\n\tconst getGeoDatas = useCallback(async () => {\n\t\tconst ipv4 = await getIP('https://api.ipify.org');\n\t\tconst geolocation = await getGeo(\n\t\t\t`https://geo.ipify.org/api/v1?apiKey=at_XutrWCJhSHpANbD3ArkbSyvuGU0kI&ipAddress=${ipv4}`\n\t\t);\n\t\tsetGeo(geolocation);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tgetGeoDatas();\n\t}, [getGeoDatas]);\n\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<Main data={geo} />\n\t\t</>\n\t);\n}\n\nexport default Home;\n","import React from 'react';\n\n//* Pages\nimport Home from './pages/Home/Home';\n\nfunction App() {\n\treturn <Home />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport App from './App';\nimport reportWebVitals from './utils/reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\nreportWebVitals();\n\n/*\nL.tileLayer('https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png', {\n\tmaxZoom: 18,\n\tattribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n});*/\n"],"sourceRoot":""}